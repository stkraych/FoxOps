name: Deploy dev branches to nonproduction

on:
  pull_request: 
  push:
    branches:
      - dev*

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Build and run Parcel in the background
        run: |
          nohup npx parcel build src/index.html > /dev/null 2>&1 &
          echo $! > .pidfile

  # Test:
  #   runs-on: ubuntu-latest
  #   needs: Build
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Use Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "20.x"
  #     - name: Install jest
  #       run: npm install --save-dev jest
  #     - name: Run  Jest test
  #       run: npm test

  # Format:
  #   runs-on: ubuntu-latest
  #   needs: [Build, Test]
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.head_ref }}
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: "20.x"
  #     - run: npm ci
  #     - run: npm run format
  #     - name: Commit changes
  #       uses: stefanzweifel/git-auto-commit-action@v4
  #       with:
  #         commit_message: Apply formatting changes
  #         branch: ${{ github.head_ref }}

  Docker:
    runs-on: ubuntu-latest
    # needs: [Build, Test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push in private registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:${{ github.sha }}
      - name: Scnan DockerHub registry Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:${{ github.sha }}"
          format: "sarif"
          output: "trivy-results.sarif"
        env:
          TRIVY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          TRIVY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Compose
        run: sudo apt install -y docker-compose
      - name: Build and Run Docker Compose
        run: |
          docker-compose up --build -d
          docker container ls

  # Terraform:
  #   runs-on: ubuntu-latest
  #   needs: [Build, Test]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: hashicorp/setup-terraform@v3
  #       with:
  #        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
