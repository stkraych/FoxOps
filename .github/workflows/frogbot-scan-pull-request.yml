name: "Frogbot Scan Pull Request"
on:
  pull_request_target:
    types: [opened, synchronize]
permissions:
  pull-requests: write
  contents: read
jobs:
  scan-pull-request:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: jfrog/frogbot@v2
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
          JF_GIT_TOKEN: ${{ secrets.MY_TOKEN }}

          JF_INSTALL_DEPS_CMD: "npm install"

          # [Optional, default: "."]
          # Relative path to the root of the project in the Git repository
          JF_WORKING_DIR: ./

          # [Default: "*git*;*node_modules*;*target*;*venv*;*test*"]
          # List of exclusion patterns (utilizing wildcards) for excluding paths in the source code of the Git repository during SCA scans.
          # JF_PATH_EXCLUSIONS: "*git*;*node_modules*;*target*;*venv*;*test*"

          # [Optional]
          # Xray Watches. Learn more about them here: https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray+Watches
          # JF_WATCHES: <watch-1>,<watch-2>...<watch-n>

          # [Optional]
          # JFrog project. Learn more about it here: https://www.jfrog.com/confluence/display/JFROG/Projects
          # JF_PROJECT: <project-key>

          # [Optional, default: "FALSE"]
          # Displays all existing vulnerabilities, including the ones that were added by the pull request.
          # JF_INCLUDE_ALL_VULNERABILITIES: "TRUE"

          # [Optional, default: "FALSE"]
          # When adding new comments on pull requests, keep old comments that were added by previous scans.
          # JF_AVOID_PREVIOUS_PR_COMMENTS_DELETION: "TRUE"

          # [Optional, default: "TRUE"]
          # Fails the Frogbot task if any security issue is found.
          # JF_FAIL: "FALSE"

          # [Optional]
          # Frogbot will download the project dependencies if they're not cached locally. To download the
          # dependencies from a virtual repository in Artifactory, set the name of the repository. There's no
          # need to set this value, if it is set in the frogbot-config.yml file.
          # JF_DEPS_REPO: ""

          # [Optional, Default: "FALSE"]
          # If TRUE, Frogbot creates a single pull request with all the fixes.
          # If false, Frogbot creates a separate pull request for each fix.
          # JF_GIT_AGGREGATE_FIXES: "FALSE"

          # [Optional, Default: "FALSE"]
          # Handle vulnerabilities with fix versions only
          # JF_FIXABLE_ONLY: "TRUE"

          # [Optional]
          # Set the minimum severity for vulnerabilities that should be fixed and commented on in pull requests
          # The following values are accepted: Low, Medium, High or Critical
          # JF_MIN_SEVERITY: ""

          # [Optional]
          # List of comma separated email addresses to receive email notifications about secrets
          # detected during pull request scanning. The notification is also sent to the email set
          # in the committer git profile regardless of whether this variable is set or not.
          # JF_EMAIL_RECEIVERS: ""

          # [Optional]
          # Set the list of allowed licenses
          # The full list of licenses can be found in:
          # https://github.com/jfrog/frogbot/blob/master/docs/licenses.md
          # JF_ALLOWED_LICENSES: "MIT, Apache-2.0"

          # [Optional]
          # Avoid adding extra info to pull request comments. that isn't related to the scan findings.
          # JF_AVOID_EXTRA_MESSAGES: "TRUE"

          # [Optional]
          # Add a title to pull request comments generated by Frogbot.
          # JF_PR_COMMENT_TITLE: ""
