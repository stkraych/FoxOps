# name: Create backend

# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - main

# jobs:
#   # Backend_Deploy:
#   #   runs-on: ubuntu-latest
#   #   environment: Production
#   #   defaults:
#   #     run:
#   #       working-directory: terraform/pre-requisite/deploy
#   #   env:
#   #     AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
#   #     AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
#   #     AWS_REGION: us-east-1
#   #   steps:
#   #     - uses: actions/checkout@v4
#   #     - uses: hashicorp/setup-terraform@v3
#   #       with:
#   #         cli_config_credentials_token: "${{ secrets.TF_API_TOKEN }}"
#   #     - name: Terraform fmt
#   #       id: fmt
#   #       run: terraform fmt -check
#   #       continue-on-error: true
#   #     - name: Terraform Init
#   #       id: init
#   #       run: terraform init
#   #     - name: Terraform Validate
#   #       id: validate
#   #       run: terraform validate -no-color
#   #     - name: Terraform Plan
#   #       run: terraform plan -no-color -var "BUCKET_NAME=${{ vars.BUCKET_NAME }}" -var "TABLE_NAME=${{ vars.TABLE_NAME }}"
#   #       continue-on-error: true
#   #     - name: Terraform Apply
#   #       run: terraform apply -auto-approve -var "BUCKET_NAME=${{ vars.BUCKET_NAME }}" -var "TABLE_NAME=${{ vars.TABLE_NAME }}"

#   Backend_Autoscalling:
#     runs-on: ubuntu-latest
#     environment: Production
#     # needs: Backend_Deploy
#     defaults:
#       run:
#         working-directory: terraform/pre-requisite/autoscalling
#     env:
#       AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
#       AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
#       AWS_REGION: us-east-1
#     steps:
#       - uses: actions/checkout@v4
#       - uses: hashicorp/setup-terraform@v3
#         with:
#           cli_config_credentials_token: "${{ secrets.TF_API_TOKEN }}"
#       - name: Terraform fmt
#         id: fmt
#         run: terraform fmt -check
#         continue-on-error: true
#       - name: Terraform Init
#         id: init
#         run: terraform init
#       - name: Terraform Validate
#         id: validate
#         run: terraform validate -no-color
#       - name: Terraform Plan
#         id: plan
#         if: github.event_name == 'push'
#         run: terraform plan -no-color -var "BUCKET_NAME_2=${{ vars.BUCKET_NAME_2 }}" -var "TABLE_NAME_2=${{ vars.TABLE_NAME_2 }}"
#         continue-on-error: true
#       - name: Terraform Apply
#         run: terraform apply -auto-approve -var "BUCKET_NAME_2=${{ vars.BUCKET_NAME_2 }}" -var "TABLE_NAME_2=${{ vars.TABLE_NAME_2 }}"
